var LoaderManager=function(){"use strict";return class{constructor(){this.resources={},this.assets=[]}static decode(s){if(!s.ok)return Promise.resolve;return s.headers.get("content-type").includes("application/json")?s.json():s.blob()}fetch(s,t){return fetch(t).then(s=>this.constructor.decode(s))}add(s,t){const e={name:s,url:new URL(t,document.baseURI).href};return this.assets.push(e),this.chain||(this.chain=0),this.chain+=1,this}save(s,t,e,r){const n=this.fetch(s,t,r);return n.then(t=>{const n="Blob"===t.constructor.name?URL.createObjectURL(t):t;this.resources[s]="function"==typeof r?r(n):n,e&&e(this.resources[s])}),n}load(s,t){const e=parseInt(this.chain);if(delete this.chain,e>1){const r=[];return this.assets.slice(-e).forEach(({name:e,url:n})=>{r.push(this.save(e,n,s,t))}),Promise.all(r)}const[{url:r,name:n}]=this.assets.slice(-e);return this.save(n,r,s,t)}batch(s,t){const e=[];return delete this.chain,this.assets.forEach(({name:r,url:n})=>e.push(this.save(r,n,s,t))),Promise.all(e)}}}();
