"use strict";class LoaderManager{constructor(){this.resources={},this.assets=[]}static decode(s){if(!s.ok)return Promise.resolve;return s.headers.get("content-type").includes("application/json")?s.json():s.blob()}fetch(s,e){return fetch(e).then(s=>this.constructor.decode(s))}add(s,e){const t={name:s,url:new URL(e,document.baseURI).href};return this.assets.push(t),this.chain||(this.chain=0),this.chain+=1,this}save(s,e,t,r){const n=this.fetch(s,e,r);return n.then(e=>{const n="Blob"===e.constructor.name?URL.createObjectURL(e):e;this.resources[s]="function"==typeof r?r(n):n,t&&t(this.resources[s])}),n}load(s,e){const t=parseInt(this.chain);if(delete this.chain,t>1){const r=[];return this.assets.slice(-t).forEach(({name:t,url:n})=>{r.push(this.save(t,n,s,e))}),Promise.all(r)}const[{url:r,name:n}]=this.assets.slice(-t);return this.save(n,r,s,e)}batch(s,e){const t=[];return delete this.chain,this.assets.forEach(({name:r,url:n})=>t.push(this.save(r,n,s,e))),Promise.all(t)}}module.exports=LoaderManager;
